class RMD_Mossberg590 : BaseWeapon
{
	Default
	{
		Weapon.SelectionOrder 100;
		Weapon.SlotNumber 4;
		Weapon.AmmoUse 0;
		Weapon.AmmoGive 0;
		Weapon.AmmoType "RMD_Shells";
		Inventory.PickupMessage "$GOTCHAINGUN";
		Obituary "$OB_MPCHAINGUN";
		Tag "Mossberg 590";
		Inventory.AltHudIcon "PISHOT1";
		BaseWeapon.IronSight IRON_INACTIVE;

		BaseWeapon.MagazineMax 10;
		BaseWeapon.Magazine 10;
		
	}
	
	Action void FireBullets()
	{	
		if (Invoker.IronSight == IRON_INACTIVE)
		{
			//A_FireProjectile("RMD_Mossberg590Proj",frandom(-2.5, 2.5), 1, 6, 4, CMF_AIMDIRECTION, frandom(-2.5, 2.5));
			A_FireBullets(2.5, 2.5, 9, 19, "RMD_BulletImpact", FBF_NoRandom); 

			B_MuzzleFlash("RMD_BuckshotMuzzleFlash", (9, 1.8, -1.0));	
		}
		else
		{
			//A_FireProjectile("RMD_Mossberg590Proj",frandom(-0.8, 0.8), 1, 0, 4, CMF_AIMDIRECTION, frandom(-0.8, 0.8));
			A_FireBullets(0.7, 0.7, 9, 19, "RMD_BulletImpact", FBF_NoRandom); 

			B_MuzzleFlash("RMD_BuckshotMuzzleFlash", (7, 0, -0.5));	
		}	


		Invoker.Magazine -= 1;
		RMD_BARINFO.Set_Mag(invoker.Magazine);
		A_StartSound("Mossberg590/Fire", CHAN_WEAPON);
		A_AlertMonsters();
		B_WpnRecoil(1.45);
	}

	
	Action void B_InitWeapon()
	{
		RMD_InitWeapon CIWpn = new("RMD_InitWeapon");
		
		CIWpn.AmmoIcon = "AMMOSHEL";
		CIWpn.Ammo1 = Invoker.AmmoType1.GetClassName();
		CIWpn.Magazine = Invoker.Magazine;
		
		InitWeapon(CIWpn);	
	}
		
	
	States
	{

	Ready:
		CHGG A 0;
		IDLE A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;

	Deselect:
		SEL1 HGFEDCBA 1;
		SEL1 A 1 A_Lower(int.max);
		TNT1 A 1 A_Lower(int.max);
		Wait;
	
	Select:
		TNT1 A 0 B_InitWeapon();
		TNT1 A 0 A_StartSound("Shotgun/Select", CHAN_WEAPON +4);
		SEL1 ABCDEFGH 1;
		SEL1 H 1 A_Raise(int.max);
		IDLE A 1 A_Raise(int.max);
        Goto ReadyReal;

	//IronSight Mode
	IronReady:
		IRO1 D 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB);
		Loop;	
	
	IronSightAnim:
		TNT1 A 0 A_SetCrosshair(99);
		IRO1 ABCD 2 A_ZoomFactor(1.8);
		Goto IronReady;
		
	IronSightDeselect:
		TNT1 A 0  A_SetCrosshair(0);
		IRO1 DCBA 2 A_ZoomFactor(1.0);
		Goto Ready;
		
	AltFire:
		TNT1 A 0 B_GoToIronSight("IronSightAnim", "IronSightDeselect");
		Goto Ready;
		
	Fire:
		TNT1 A 0 FireCheck();
		Goto Ready;
	
	FireNow:
		TNT1 A 0 CheckIfAmmo(Invoker.Magazine, "ReadyReal");
		FIR1 A 2 FireBullets();
		FIR1 BCDEF 2;
		FIR1 F 0 A_StartSound("Mossberg590/CockStart", CHAN_WEAPON +1);
		FIR1 F 0 B_SpawnCasing("ShellCase", (4, -6.5, -3.0));		
		FIR1 GH 2;
		FIR1 H 0 A_StartSound("Mossberg590/CockEnd", CHAN_WEAPON +2);
		FIR1 IJKL 2;
		FIR1 L 0 A_Refire("FireNow");
		Goto Ready;
		
	//Ironsight Fire
	IronFireNow:
		TNT1 A 0 CheckIfAmmo(Invoker.Magazine, "IronReady");
		IFI1 A 2 FireBullets();
		IFI1 BCDEF 2;
		IFI1 F 0 A_StartSound("Mossberg590/CockStart", CHAN_WEAPON +1); 
		IFI1 F 0 B_SpawnCasing("ShellCase", (4, -0.5, 2.7));
		IFI1 GH 2;
		IFI1 H 0 A_StartSound("Mossberg590/CockEnd", CHAN_WEAPON +2); 
		IFI1 IJKL 2;
		IF11 L 0 A_ReFire("IronFireNow");
		Goto IronReady;
		
	Reload:
		TNT1 A 0 ReloadCheck();
		Goto Ready;

	ReloadNow:
		REL1 ABCDEF 2;
		REL1 F 0 A_StartSound("Mossberg590/CockStart", CHAN_WEAPON +1);
		Goto ReloadLoop; 
	
	ReloadLoop: 
		TNT1 A 0 
		{
			if (Player.mo.CountInv(Invoker.AmmoType1) <= 0)
			{
				Return ResolveState("ReloadEnd");
			}
			
			Return A_Jump(0, "ReloadEnd");
		}

		//Start Loop
		REL1 GHI 3 A_WeaponReady();
		TNT1 A 0
		{
			A_StartSound("Mossberg590/Insert", CHAN_WEAPON);
			
			ReloadGun(Invoker.AmmoType1, 0, 1, 1, True);
			RMD_BARINFO.Set_Mag(invoker.Magazine);
			
			if (invoker.Magazine == invoker.MagazineMax)
			{
				Return A_Jump(256, "ReloadEnd");
			}
			
			Return A_Jump(256, "ReloadLoop");
		}
		REL1 TSRQ 3 A_WeaponReady();
		Goto ReloadEnd;	
	

	ReloadEnd:
		REL1 JKLMNO 2;
		REL1 O 0 A_StartSound("Mossberg590/CockEnd", CHAN_WEAPON +1);
		Goto Ready; 	
	}
}


Class RMD_Mossberg590Proj : RMD_BaseBullet
{
	Default
	{
		//Normal Damage
		RMD_BaseBullet.ImpactDamage 16; 
		RMD_BaseBullet.DamageRand 1.6;
		//Nerfed Damage
		RMD_BaseBullet.HealthDamage 1000;
		-ExtremeDeath;
		
		Scale 1.0;
		Decal "RMD_Buckshot_BulletHoles";
	}
}