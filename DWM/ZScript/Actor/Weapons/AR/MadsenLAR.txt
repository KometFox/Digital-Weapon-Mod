class RMD_MadsenLAR : BaseWeapon
{
	Enum E_FireMode
	{
		BULLET,
		GRENADE,
	}

	Default
	{
		Weapon.SlotNumber 5;
		Weapon.SelectionOrder 1;
		Weapon.AmmoUse 0;
		Weapon.AmmoGive 0;
		Weapon.AmmoType1 "RMD_ARBullets";
		Weapon.AmmoType2 "RMD_Grenades";
		Inventory.PickupMessage "$GOTCHAINGUN";
		Inventory.AltHudIcon "PIMADLAR";
		Obituary "$OB_MPCHAINGUN";
		Tag "Madsen LAR";
		
		BaseWeapon.IronSight IRON_INACTIVE;
		BaseWeapon.FireMode BULLET;
		
		BaseWeapon.MagazineMax 60;
		BaseWeapon.Magazine 60;	
		
		BaseWeapon.MagazineMax2 1;
		BaseWeapon.Magazine2 1;
	}
	
	action state ReloadCheck()
	{
		if (Invoker.FireMode == GRENADE)
			return B_ReloadGoTo(
								"ReadyReal", 
								"IronReady", 
								"IronSightDeselect", 
								"ReloadNadeNow",
								Invoker.AmmoType2, 
								Invoker.Magazine2,
								Invoker.MagazineMax2, 
								1);
		else 
			return B_ReloadGoTo(
								"ReadyReal", 
								"IronReady", 
								"IronSightDeselect", 
								"ReloadNow",
								Invoker.AmmoType1, 
								Invoker.Magazine,
								Invoker.MagazineMax, 
								1);
	}	
	
	//Blam blam
	Action Void FireBullets()
	{
		//Check for Ammo
		if (Invoker.Magazine <= 0 && Invoker.IronSight == IRON_ACTIVE)
		{
			SetWeaponState("IronReady");
			Return;
		}
		else if (Invoker.Magazine <= 0 && Invoker.IronSight == IRON_INACTIVE)
		{
			SetWeaponState("ReadyReal");
			Return;
		}		
	
		Invoker.Magazine -= 1;
		RMD_BARINFO.Set_Mag(invoker.Magazine);
			

			
		if (Invoker.IronSight == IRON_INACTIVE)
		{
			A_FireProjectile("RMD_MadsenLAR_Bullet",frandom(-0.7, 0.7), 1, 6, 4, CMF_AIMDIRECTION,frandom(-0.5, 0.5));
			//A_FireBullets(0.7, 0.7, 1, 10 * frandom(1.0, 1.8), "URPG_RicochetEffect", BULLETFIRE, 0, null);
			
			B_SpawnCasing("RifleCase", (8, -9.5, -3.25));
			B_MuzzleFlash("RMD_BulletMuzzleFlash", (13, 2.1, -1.2));	
		}
		else if (Invoker.IronSight == IRON_ACTIVE)
		{
			A_FireProjectile("RMD_MadsenLAR_Bullet",frandom(-0.2, 0.2), 1, 0, 4, CMF_AIMDIRECTION,frandom(-0.2, 0.2));
			//A_FireBullets(0.2, 0.2, 1, 10 * frandom(1.0, 1.8), "URPG_RicochetEffect", BULLETFIRE, 0, null);
			B_SpawnCasing("RifleCase", (12, 0.0, -2.5));
			B_MuzzleFlash("RMD_BulletMuzzleFlash", (10, 0, -0.8));	
		}

		
		A_StartSound("MadsenLAR/Fire", CHAN_WEAPON);
		A_AlertMonsters();
	}

	//Ka-Pow
	Action Void FireGrenade()
	{
		//Check for Ammo
		if (Invoker.Magazine2 <= 0 && Invoker.IronSight == IRON_ACTIVE)
		{
			SetWeaponState("IronReady");
			Return;
		}
		else if (Invoker.Magazine2 <= 0 && Invoker.IronSight == IRON_INACTIVE)
		{
			SetWeaponState("ReadyReal");
			Return;
		}	
	
		Invoker.Magazine2 -= 1;
		RMD_BARINFO.Set_Mag(invoker.Magazine2);
			
		if (Invoker.IronSight == IRON_INACTIVE)
		{
			A_FireProjectile("RMD_Madsen_Grenade",frandom(-0.3, 0.3), 1, 0, 4, CMF_AIMDIRECTION,frandom(-0.3, 0.3));
			B_MuzzleFlash("RMD_GrenadeMuzzleFlash", (13, 2.1, -2.4));	
		}
		else if (Invoker.IronSight == IRON_ACTIVE)
		{
			A_FireProjectile("RMD_Madsen_Grenade",frandom(-0.3, 0.3), 1, 0, 4, CMF_AIMDIRECTION,frandom(-0.3, 0.3));
			B_MuzzleFlash("RMD_GrenadeMuzzleFlash", (13, 0, -1.6));	
		}
		
		A_StartSound("MadsenLAR/GrenadeFire", CHAN_WEAPON);
		A_AlertMonsters();
	}
	
	
	
	Action Void SetAmmoIcon(int Type)
	{
		Switch(Type)
		{
			case BULLET:
				RMD_BARINFO.Set_Mag(invoker.Magazine);
				RMD_BARINFO.SetAmmoIcon("AMMOAR");
				RMD_BARINFO.SetAmmo1("RMD_ARBullets");
				Break;
				
			case GRENADE:
				RMD_BARINFO.Set_Mag(invoker.Magazine2);
				RMD_BARINFO.SetAmmoIcon("AMMONADE");
				RMD_BARINFO.SetAmmo1("RMD_Grenades");
				Break;
		}
	
	
	}
	
	Action void SwitchFireMode()
	{
		if (Invoker.FireMode == BULLET)
		{
			Invoker.FireMode = GRENADE;
			SetAmmoIcon(GRENADE);
		}
		else
		{
			Invoker.FireMode = BULLET;
			SetAmmoIcon(BULLET);
		}
	}
	
	
	

	States
	{

	Ready:
		CHGG A 0;
		IDLE A 0 
		{
			A_Jump(256, "Init");
		}
		Goto Init;
	
	Init:
		IDL1 A 0 
		{
				TakeCounterItem();
				SetAmmoIcon(Invoker.FireMode);
		}
		Goto ReadyReal;
	
	ReadyReal:
		IDLE A 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB | WRF_ALLOWUSER1);
		Loop;
		
	//Ironsight Mode
	IronReady:
		IRO1 D 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB | WRF_ALLOWUSER1);
		Loop;
	
	Deselect:
		TNT1 A 0 A_StopSound(CHAN_WEAPON);
		SEL1 JIHGFEDCBA 1;
		SEL1 A 1 A_Lower(int.max);
		Wait;
	
	Select:
		TNT1 A 0 
		{
				A_StartSound("AssaultRifle/Select", CHAN_WEAPON);
				A_TakeInventory("Reloading", 99);
				SetAmmoIcon(Invoker.FireMode);
		}
		SEL1 ABCDEFGHIJ 1;
		SEL1 J 1 A_Raise(int.max);
        Wait;
			
	User1: //Select Firemode
		"####" "#" 0 SwitchFireMode();
		"####" "#" 6;
		"####" "#" 0
		{
			if (Invoker.IronSight == IRON_ACTIVE)
			{
				Return ResolveState("IronReady");
				
			}
			else if (Invoker.IronSight == IRON_INACTIVE)
			{
				Return ResolveState("ReadyReal");
			}
		
			Return ResolveState("ReadyReal");
		}
		Goto ReadyReal;

	//Ironsight Mode
	IronSightAnim:
		TNT1 A 0 A_SetCrosshair(99);
		IRO1 ABCD 2 A_ZoomFactor(2.25);
		Goto IronReady;
		
	IronSightDeselect:
		TNT1 A 0  A_SetCrosshair(0);
		IRO1 DCBA 2 A_ZoomFactor(1.0);
		TNT1 A 0
		{
			Invoker.IronSight = IRON_INACTIVE;
			
			if (CountInv("GotoReload") > 0)
			{
				if (Invoker.FireMode == BULLET)
				{
					Return A_Jump(256, "ReloadNow");
				}
				else if (Invoker.FireMode == GRENADE)
				{
					Return A_Jump(256, "ReloadNadeNow");
				}
			}

			Return A_Jump(256, "ReadyReal");			
		}
		Goto ReadyReal;
		
	AltFire:
		TNT1 A 0 B_GoToIronSight("IronSightAnim", "IronSightDeselect");
		Goto ReadyReal;
		
	Fire:
		TNT1 A 0
		{
		
			if (Invoker.FireMode == BULLET)
			{
				if (Invoker.IronSight == IRON_ACTIVE)
				{
					Return A_Jump(256, "IronFireNow");
				}
				else
				{
					Return A_Jump(256, "FireNow");				
				}
				
				Return A_Jump(256, "ReadyReal");
			}

			else if (Invoker.FireMode == GRENADE)
			{	
				if (Invoker.IronSight == IRON_ACTIVE)
				{
					Return A_Jump(256, "IronFireGrenadeNow");
				}
				else
				{
					Return A_Jump(256, "FireGrenadeNow");				
				}
				
				Return A_Jump(256, "ReadyReal");
			}
			
			Return A_Jump(256, "ReadyReal");		
		}
		Goto ReadyReal;

	//Bullets
	FireNow:
		FIR1 A 1 FireBullets();
		FIR1 BCD 1;
		FIR1 D 0 A_ReFire("FireNow");
		FIR1 EFG 1;		
		Goto ReadyReal;
		
	IronFireNow:
		IFI1 A 1 FireBullets();
		IFI1 BCD 1;
		IFI1 D 0 A_ReFire("IronFireNow");
		IFI1 EFG 1;
		Goto IronReady;	
		
	//Grenade
	FireGrenadeNow:
		IDLE A 1 FireGrenade();
		IDLE A 12;
		IDLE A 0 A_ReFire("FireGrenadeNow");
		Goto ReadyReal;
		
	IronFireGrenadeNow:
		IDLE A 1 FireGrenade();
		IDLE A 12;
		IDLE A 0 A_ReFire("IronFireGrenadeNow");
		Goto IronReady;		
		
	Reload:
		TNT1 A 0 ReloadCheck();			
		Goto ReadyReal;
		
	//The Magazine
	ReloadNow:	
		TNT1 A 0 A_TakeInventory("GotoReload", 1);
		REL1 ABCDEFGH 2;
		REL1 I 2
		{
			A_StartSound("MadsenLAR/MagOut", CHAN_WEAPON +1);
			A_FireProjectile("EmptyMagSpawn",-5,0,8,-4);
		}
		REL1 JKL 2;
		REL1 M 12;
		REL1 NO 2;
		REL1 P 2
		{
			A_StartSound("MadsenLAR/MagIn", CHAN_WEAPON +2);
			
			ReloadMagazine(PRIMARY, Invoker.MagazineMax, Invoker.MagazineMax);				
			RMD_BARINFO.Set_Mag(invoker.Magazine);
	
			Return A_Jump(0, "ReadyReal");	
		}
		REL1 QRST 2;		
		REL1 U 2 A_StartSound("MadsenLAR/Cocking", CHAN_WEAPON +3);
		REL1 VWXYZ 2;
		REL2 ABCDEF 2;
		Goto ReadyReal;
		
	//The Grenade Drum
	ReloadNadeNow:
		TNT1 A 0 A_TakeInventory("GotoReload", 1);
		TNT1 A 0 A_StartSound("MadsenLar/GrenOpen", CHAN_WEAPON);
		RLG1 ABCDE 2;
		RLG1 F 2
		{
			A_FireProjectile("GrenadeCaseSpawn", 90, 0, 14, 2);
		}
		RLG1 GHIJ 2;
		TNT1 A 0;
		RLG1 K 7;
		TNT1 A 0;
		RLG1 L 2;
		RLG1 M 7
		{
			A_StartSound("MadsenLar/GrenLoad", CHAN_WEAPON +1);
			ReloadMagazine(SECONDARY, Invoker.MagazineMax2, Invoker.MagazineMax2);				
			RMD_BARINFO.Set_Mag(invoker.Magazine2);
		}
		RLG1 NO 2;
		RLG1 P 2 A_StartSOund("MadsenLar/GrenClose", CHAN_WEAPON +2);
		RLG1 QRSTU 2;
		Goto ReadyReal;	
	
	//FuckingMother
	Template:
		IRND A 0;
		IFIN A 0;
		Goto Ready;
	}
}


Class RMD_MadsenLAR_Bullet : RMD_BaseBullet
{
	Default
	{		
		//Normal Damage
		RMD_BaseBullet.ImpactDamage 12; 
		RMD_BaseBullet.DamageRand1 4.0;
		//Nerfed Damage
		RMD_BaseBullet.HealthDamage 250;		
		
		Scale 0.75;
		Decal "RMD_AR_BulletHoles";
	}
}

Class RMD_Madsen_Grenade : LightExplosives
{
	Default
	{
		Speed 60;
		Decal "RMD_SmallExplosion";
		Gravity 0.425;
		//Impact 
		BaseProjectile.ImpactDamage 0;
		//Splash 
		BaseProjectile.SplashDamage 350;
		BaseProjectile.FullSplashDamage 80;
		BaseProjectile.SplashRadius 140;
		//Randomizer
		BaseProjectile.NormalDamageRandom 1.0;
		BaseProjectile.NerfDamageRandom 1.0;
	}
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay
			{
				Actor Flare;
						
				Flare = Spawn("RMD_SMRL_Flare", Pos, ALLOW_REPLACE);
						
				If (Flare)
				{
					Flare.Target = Self;
					Flare.Scale = (0.23, 0.23);
					Flare.SetShade("Lavender");	
				}			
			}
			Goto SpawnLoop;
		SpawnLoop:	
			IDLE A 1 A_SpawnItemEx("RMD_GrenadeTrail", 0, 0, 0);
			Loop;
		Explode:
			TNT1 A 0 
			{
				A_StartSound("Explosion/Grenade");
				A_SpawnItemEx("RMD_40mmExplosionSpawner", 0, 0, 0);
			}
			Stop;	
	}
}

