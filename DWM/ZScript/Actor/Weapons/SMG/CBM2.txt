class CBM3 : BaseWeapon
{
	Default
	{
		Weapon.SelectionOrder 2;
		Weapon.SlotNumber 3;
		Weapon.AmmoUse 0;
		Weapon.AmmoGive 0;
		Weapon.AmmoType "RMD_SMGBullets";
		Inventory.PickupMessage "$GOTCHAINGUN";
		Inventory.AltHudIcon "PICBM3";
		Obituary "$OB_MPCHAINGUN";
		Tag "CB-M2";
		
		BaseWeapon.IronSight IRON_INACTIVE;
		
		BaseWeapon.MagazineMax 70;
		BaseWeapon.Magazine 70;
		
	}

	Action void FireBullets()
	{
		//Check for Ammo
		if (Invoker.Magazine <= 0 && Invoker.IronSight == IRON_ACTIVE)
		{
			SetWeaponState("IronReady");
			Return;
		}
		else if (Invoker.Magazine <= 0 && Invoker.IronSight == IRON_INACTIVE)
		{
			SetWeaponState("ReadyReal");
			Return;
		}		
	

		if (Invoker.IronSight == IRON_INACTIVE)
		{
			A_FireProjectile("RMD_CBM3_Projectile",frandom(-0.7, 0.7), 1, 6, 4, CMF_AIMDIRECTION,frandom(-0.5, 0.5));
			//A_FireBullets(0.8, 0.8, 1, 7 * Frandom(1.0, 1.7), "URPG_RicochetEffect", BULLETFIRE, 0, null);
		
			B_MuzzleFlash("RMD_BulletMuzzleFlash", (13, 2.7, -2.0));	
			B_SpawnCasing("PistolCase", (12, -8.5, -2.0));
		}
		else
		{
			A_FireProjectile("RMD_CBM3_Projectile",frandom(-0.4, 0.4), 1, 0, 4, CMF_AIMDIRECTION,frandom(-0.4, 0.4));
			//A_FireBullets(0.45, 0.45, 1, 7 * Frandom(1.0, 1.7), "URPG_RicochetEffect", BULLETFIRE, 0, null);	
			
			B_MuzzleFlash("RMD_BulletMuzzleFlash", (13, 0.0, -1.5));	
			B_SpawnCasing("PistolCase", (12, -8.5, -2.0));
		}

		
		A_StartSound("CBM2/Fire", CHAN_WEAPON);
		A_AlertMonsters();
		Invoker.Magazine -= 1;
		RMD_BARINFO.Set_Mag(invoker.Magazine);
	}

	States
	{

	Ready:
		CHGG A 0;
		IDLE A 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB);
		Loop;

	
	Deselect:
		SELC FEDCBA 1 A_Lower;
		SELC A 1 A_Lower;
		TNT1 A 0 A_Lower(100);
		Loop;
		
	Select:
		TNT1 A 0 
		{
				A_StartSound("SMG/Select", CHAN_WEAPON +5);
				TakeCounterItem();
				RMD_BARINFO.Set_Mag(invoker.Magazine);
				RMD_BARINFO.SetAmmoIcon("AMMOSMG");
				RMD_BARINFO.SetAmmo1("RMD_SMGBullets");
		}
		SELC ABCDEF 1 A_Raise;
		IDLE A 1 A_Raise(100);
        Goto Ready;
			
	//Ironsight Mode
	IronReady:
		IRON D 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB);
		Loop;
	
	IronSightAnim:
		TNT1 A 0 A_SetCrosshair(99);
		IRON ABCD 2 A_ZoomFactor(1.5);
		Goto IronReady;
		
	IronSightDeselect:
		TNT1 A 0  A_SetCrosshair(0);
		IRON DCBA 2 A_ZoomFactor(1.0);
		TNT1 A 0
		{
			Invoker.IronSight = IRON_INACTIVE;
			
			if (CountInv("GotoReload") > 0)
			{
				Return A_Jump(256, "ReloadNow");
			}

			Return A_Jump(256, "Ready");			
		}
		Goto Ready;
		
	AltFire:
		TNT1 A 0
		{
			if (Invoker.IronSight == IRON_INACTIVE)
			{
				Invoker.IronSight = IRON_ACTIVE;
				
				Return A_Jump(256, "IronSightAnim");

			}
			else
			{
				Invoker.IronSight = IRON_INACTIVE;
				
				Return A_Jump(256, "IronSightDeselect");
			}	
		}
		Goto Ready;
		
	Fire:
		TNT1 A 0
		{
			if (Invoker.MagLeft(Invoker.Magazine))
			{
				if (Invoker.IronSight == IRON_ACTIVE)
				{
					Return A_Jump(256, "IronFireNow");
				}
				else
				{	
					Return A_Jump(256, "FireNow");				
				}
			}
		
		
			//If it has no ammo left
			if (Invoker.IronSight == IRON_ACTIVE)
			{
				Return A_Jump(256, "IronReady");
			}
			
			else
			{
				Return A_Jump(256, "ReadyReal");				
			}		
			
		}
		Goto Ready;
	

	
	FireNow:
		FIRE A 1 FireBullets();
		FIRE BC 1;
		FIRE D 0 A_ReFire;
		FIRE DEF 1; 
		Goto Ready;
		
	IronFireNow:
		IFIR A 1 FireBullets();
		IFIR BC 1;
		IFIR D 0 A_ReFire;
		IFIR DEF 1;
		Goto IronReady;	
		
	Reload:
		TNT1 A 0 ReloadCheck();
		Goto Ready;

	ReloadNow:
		TNT1 A 0 A_TakeInventory("GotoReload", 1);
		REL1 ABCDEFGH 2;
		TNT1 A 0;
		TNT1 A 0
		{
			A_StartSound("MP5/MagOut", CHAN_WEAPON);
			A_FireProjectile("SMGMagSpawn",-5,0,8,-4);
		}
		REL1 IJ 2;
		TNT1 A 0;
		REL1 K 8;
		TNT1 A 0;
		REL1 LMN 2;
		TNT1 A 0
		{
			A_StartSound("MP5/MagIn", CHAN_WEAPON +1);
			
			ReloadMagazine(PRIMARY, Invoker.MagazineMax, Invoker.MagazineMax);				
			RMD_BARINFO.Set_Mag(invoker.Magazine);
	
			Return A_Jump(0, "Ready");	
		}
		REL1 OPQ 2;		
		TNT1 A 0 A_StartSound("MP5/Cocking", CHAN_WEAPON);
		REL1 RSTUVWXYZ 2;
		Goto Ready;
		
	}
}


Class RMD_CBM3_Projectile : RMD_BaseBullet
{
	Default
	{
		//Normal Damage
		RMD_BaseBullet.ImpactDamage 9; 
		RMD_BaseBullet.DamageRand 1.9;
		//Nerfed Damage
		RMD_BaseBullet.HealthDamage 220;				
		
		Scale 0.75;
		Decal "RMD_SMG_BulletHoles";
	}
	
 
}