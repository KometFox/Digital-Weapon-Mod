class RMD_TOZ34 : BaseWeapon
{
	enum e_firemode
	{
		ONESHOT,
		TWOSHOT,	
	}

	Default
	{
		Weapon.SelectionOrder 100;
		Weapon.SlotNumber 4;
		Weapon.AmmoUse 0;
		Weapon.AmmoGive 0;
		Weapon.AmmoType "RMD_Shells";
		Inventory.PickupMessage "$GOTCHAINGUN";
		Obituary "$OB_MPCHAINGUN";
		Tag "TOZ-34";
		Inventory.AltHudIcon "PITOZ34";
		BaseWeapon.IronSight IRON_INACTIVE;

		BaseWeapon.MagazineMax 2;
		BaseWeapon.Magazine 2;
		
	}
	
	Action void SwitchFireMode()
	{
		if (Invoker.FireMode == TWOSHOT)
		{
			Invoker.FireMode = ONESHOT;
			RMD_BARINFO.SetFireMode("One Shot");
			
		}
		else
		{
			Invoker.FireMode = TWOSHOT;
			RMD_BARINFO.SetFireMode("Two Shot");
		}
		
	}
	
	
	Action void FireBullets()
	{	
		int BCount = 12;
		int Acc = 1;
		string TOZFire = "TOZ34/Fire1";
		
		if (Invoker.FireMode == ONESHOT) 
		{
			if (Invoker.Magazine <= 0)
				return;
		
			BCount = 6;
			Acc = 2;
			Invoker.Magazine -= 1;
			TOZFire = "TOZ34/Fire1";
		}
		else
		{
			if (Invoker.Magazine <= 1)
				return;

			BCount = 12;
			Acc = 1;
			Invoker.Magazine -= 2;
			TOZFire = "TOZ34/Fire2";
		}
		
		
		if (Invoker.IronSight == IRON_INACTIVE)
		{
			for (int i = 0; i < BCount; i++)
			{
				A_FireProjectile("RMD_TOZ34_Bullet",frandom(-2.8, 2.8) / Acc, 1, 6, 4, CMF_AIMDIRECTION, frandom(-2.8, 2.8) / Acc);
			}
			
			B_MuzzleFlash("RMD_BuckshotMuzzleFlash", (9, 1.8, -1.0));	
		}
		else
		{
			for (int i = 0; i < BCount; i++)
			{
				A_FireProjectile("RMD_TOZ34_Bullet",frandom(-0.7, 0.7) / Acc, 1, 0, 4, CMF_AIMDIRECTION, frandom(-0.7, 0.7) / Acc);
			}
			
			B_MuzzleFlash("RMD_BuckshotMuzzleFlash", (7, 0, -0.5));	
		}	


		RMD_BARINFO.Set_Mag(invoker.Magazine);
		A_StartSound(TOZFire, CHAN_WEAPON);
		A_AlertMonsters();
	}
		
	States
	{

	Ready:
		CHGG A 0;
		IDLE A 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB | WRF_ALLOWUSER1);
		Loop;

	Deselect:
		SEL1 HGFEDCBA 1;
		TNT1 A 0 
		{
			RMD_BARINFO.SetFireMode("");
		}
		SEL1 A 1 A_Lower(int.max);
		TNT1 A 1 A_Lower(int.max);
		Wait;
	
	Select:
		TNT1 A 0 
		{
				TakeCounterItem();
				
				if (Invoker.FireMode == ONESHOT)
					RMD_BARINFO.SetFireMode("One Shot");
				else
					RMD_BARINFO.SetFireMode("Two Shot");
				
				RMD_BARINFO.Set_Mag(invoker.Magazine);
				RMD_BARINFO.SetAmmoIcon("AMMOSHEL");
				RMD_BARINFO.SetAmmo1("RMD_Shells");				
		}
		TNT1 A 0 A_StartSound("Shotgun/Select", CHAN_WEAPON +4);
		SEL1 ABCDEFGH 1;
		SEL1 H 1 A_Raise(int.max);
		IDLE A 1 A_Raise(int.max);
        Goto ReadyReal;


	User1: //Select Firemode
		"####" "#" 0 SwitchFireMode();
		"####" "#" 6;
		"####" "#" 0;
		Goto Ready;

	//IronSight Mode
	IronReady:
		IRO1 D 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB);
		Loop;	
	
	IronSightAnim:
		TNT1 A 0 A_SetCrosshair(99);
		IRO1 ABCD 2 A_ZoomFactor(1.8);
		Goto IronReady;
		
	IronSightDeselect:
		TNT1 A 0  A_SetCrosshair(0);
		IRO1 DCBA 2 A_ZoomFactor(1.0);
		TNT1 A 0
		{
			Invoker.IronSight = IRON_INACTIVE;
			
			if (CountInv("GotoReload") > 0)
			{
				Return A_Jump(256, "Reloading");
			}

			Return A_Jump(256, "Ready");			
		}
		Goto Ready;
		
	AltFire:
		TNT1 A 0 B_GoToIronSight("IronSightAnim", "IronSightDeselect");
		Goto Ready;
		
	Fire:
		TNT1 A 0
		{
			if (Invoker.MagLeft(Invoker.Magazine))
			{
				if (Invoker.IronSight == IRON_ACTIVE)
				{
					Return A_Jump(256, "IronFireNow");
				}
				else
				{	
					Return A_Jump(256, "FireNow");				
				}
			}
		
		
			//If it has no ammo left
			if (Invoker.IronSight == IRON_ACTIVE)
			{
				Return A_Jump(256, "IronReady");
			}
			
			else
			{
				Return A_Jump(256, "ReadyReal");				
			}
		}
		Goto Ready;
	
	FireNow:
		FIR1 A 2 FireBullets();
		FIR1 BC 2;
		IDLE A 0 A_Refire("FireNow");
		FIR1 DEF 2;
		Goto Ready;
		
	//Ironsight Fire
	IronFireNow:
		IFI1 A 1 FireBullets();
		IFI1 BC 2;
		IFI1 O 0 A_ReFire("IronFireNow");
		IFI1 DEF 2;
		Goto IronReady;
		
	Reload:
		TNT1 A 0
		{
			if (Invoker.Magazine == 0)
				return ResolveState("Reload2");
			else if (Invoker.Magazine == 1)
				return ResolveState("Reload1");
			
			return ResolveState("Ready");
		}
		Goto Ready;

	Reload2:
		RLB1 ABC 2;
		TNT1 A 0 A_StartSound("TOZ34/Open", CHAN_WEAPON + 1);
		RLB1 DEFGHIJKLM 2 A_WeaponReady();
		TNT1 A 0
		{
			A_StartSound("TOZ34/Insert", CHAN_WEAPON + 2);
			
			ReloadGun(Invoker.AmmoType1, 0, 1, 2, False);
			RMD_BARINFO.Set_Mag(invoker.Magazine);
		}
		RLB1 NOPQ 2 A_WeaponReady();
		TNT1 A 0 A_StartSound("TOZ34/Close", CHAN_WEAPON + 3);
		RLB1 RST 2 A_WeaponReady();
		Goto Ready;	

	Reload1:
		RLA1 ABC 2;
		TNT1 A 0 A_StartSound("TOZ34/Open", CHAN_WEAPON + 1);
		RLA1 DEFGHIJKLM 2 A_WeaponReady();
		TNT1 A 0
		{
			A_StartSound("TOZ34/Insert", CHAN_WEAPON + 2);
			
			ReloadGun(Invoker.AmmoType1, 0, 1, 1, False);
			RMD_BARINFO.Set_Mag(invoker.Magazine);
		}
		RLA1 NOPQ 2 A_WeaponReady();
		TNT1 A 0 A_StartSound("TOZ34/Close", CHAN_WEAPON + 3);
		RLA1 RST 2 A_WeaponReady();
		Goto Ready;		
	}
}


Class RMD_TOZ34_Bullet : RMD_BaseBullet
{
	Default
	{
		//Normal Damage
		RMD_BaseBullet.ImpactDamage 18; 
		RMD_BaseBullet.DamageRand 2.0;
		//Nerfed Damage
		RMD_BaseBullet.HealthDamage 1000;
		
		Scale 1.0;
		Decal "RMD_Buckshot_BulletHoles";
	}
}