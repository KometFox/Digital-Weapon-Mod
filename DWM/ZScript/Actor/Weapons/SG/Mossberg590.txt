class RMD_Mossberg590 : BaseWeapon
{
	Default
	{
		Weapon.SelectionOrder 100;
		Weapon.SlotNumber 4;
		Weapon.AmmoUse 0;
		Weapon.AmmoGive 0;
		Weapon.AmmoType "RMD_Shells";
		Inventory.PickupMessage "$GOTCHAINGUN";
		Obituary "$OB_MPCHAINGUN";
		Tag "Mossberg 590";
		Inventory.AltHudIcon "PISHOT1";
		BaseWeapon.IronSight IRON_INACTIVE;

		BaseWeapon.MagazineMax 14;
		BaseWeapon.Magazine 14;
		
	}
	
	Action void FireBullets()
	{	
		//Check for Ammo
		if (Invoker.Magazine <= 0 && Invoker.IronSight == IRON_ACTIVE)
		{
			SetWeaponState("IronReady");
			Return;
		}
		else if (Invoker.Magazine <= 0 && Invoker.IronSight == IRON_INACTIVE)
		{
			SetWeaponState("ReadyReal");
			Return;
		}				
			
		if (Invoker.IronSight == IRON_INACTIVE)
		{
			for (int i = 0; i < 8; i++)
			{
				A_FireProjectile("RMD_Mossberg590Proj",frandom(-2.5, 2.5), 1, 6, 4, CMF_AIMDIRECTION, frandom(-2.5, 2.5));
			}
			
			B_MuzzleFlash("RMD_BuckshotMuzzleFlash", (9, 1.8, -1.0));	
		}
		else
		{
			for (int i = 0; i < 8; i++)
			{
				A_FireProjectile("RMD_Mossberg590Proj",frandom(-0.8, 0.8), 1, 0, 4, CMF_AIMDIRECTION, frandom(-0.8, 0.8));
			}
			
			B_MuzzleFlash("RMD_BuckshotMuzzleFlash", (7, 0, -0.5));	
		}	


		Invoker.Magazine -= 1;
		RMD_BARINFO.Set_Mag(invoker.Magazine);
		A_StartSound("AoMShotgun/Fire", CHAN_WEAPON);
		A_AlertMonsters();
	}
	
		
	
	States
	{

	Ready:
		CHGG A 0;
		IDLE A 1 A_WeaponReady(WRF_ALLOWRELOAD);
		Loop;

	Deselect:
		SEL1 HGFEDCBA 1;
		SEL1 A 1 A_Lower(int.max);
		TNT1 A 1 A_Lower(int.max);
		Wait;
	
	Select:
		TNT1 A 0 
		{
				TakeCounterItem();
				RMD_BARINFO.Set_Mag(invoker.Magazine);
				RMD_BARINFO.SetAmmoIcon("AMMOSHEL");
				RMD_BARINFO.SetAmmo1("RMD_Shells");				
		}
		TNT1 A 0 A_StartSound("Shotgun/Select", CHAN_WEAPON +4);
		SEL1 ABCDEFGH 1;
		SEL1 H 1 A_Raise(int.max);
		IDLE A 1 A_Raise(int.max);
        Goto ReadyReal;

	//IronSight Mode
	IronReady:
		IRO1 D 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB);
		Loop;	
	
	IronSightAnim:
		TNT1 A 0 A_SetCrosshair(99);
		IRO1 ABCD 2 A_ZoomFactor(1.5);
		Goto IronReady;
		
	IronSightDeselect:
		TNT1 A 0  A_SetCrosshair(0);
		IRO1 DCBA 2 A_ZoomFactor(1.0);
		TNT1 A 0
		{
			Invoker.IronSight = IRON_INACTIVE;
			
			if (CountInv("GotoReload") > 0)
			{
				Return A_Jump(256, "Reloading");
			}

			Return A_Jump(256, "Ready");			
		}
		Goto Ready;
		
	AltFire:
		TNT1 A 0 B_GoToIronSight("IronSightAnim", "IronSightDeselect");
		Goto Ready;
		
	Fire:
		TNT1 A 0
		{
			if (Invoker.MagLeft(Invoker.Magazine))
			{
				if (Invoker.IronSight == IRON_ACTIVE)
				{
					Return A_Jump(256, "IronFireNow");
				}
				else
				{	
					Return A_Jump(256, "FireNow");				
				}
			}
		
		
			//If it has no ammo left
			if (Invoker.IronSight == IRON_ACTIVE)
			{
				Return A_Jump(256, "IronReady");
			}
			
			else
			{
				Return A_Jump(256, "ReadyReal");				
			}
		}
		Goto Ready;
	
	FireNow:
		FIR1 A 1 FireBullets();
		FIR1 BCDEFG 1;
		FIR1 HIJK 1;
		FIR1 L 2 A_StartSound("AoMShotgun/CockStart", CHAN_WEAPON +1);
		FIR1 L 0 B_SpawnCasing("ShellCase", (4, -6.5, -3.0));
		FIR1 MNOPQ 2;
		FIR1 R 2 A_StartSound("AoMShotgun/CockEnd", CHAN_WEAPON +2);
		FIR1 STUV 2;
		IDLE A 0 A_ReFire("FireNow");
		Goto Ready;
		
	//Ironsight Fire
	IronFireNow:
		IFI1 A 1 FireBullets();
		IFI1 BCDEFG 1;
		IFI1 HIJKLMN 1;
		IFI1 O 2 A_StartSound("AoMShotgun/CockStart", CHAN_WEAPON +1); 
		IFI1 O 0 B_SpawnCasing("ShellCase", (4, -0.5, 2.7));
		IFI1 PQRS 2;
		IRO1 D 0 A_StartSound("AoMShotgun/CockEnd", CHAN_WEAPON +2); 
		IRO1 D 0 A_ReFire("IronFireNow");
		Goto IronReady;
		
	Reload:
		TNT1 A 0 ReloadCheck();
		Goto Ready;

	//Bleh I screwed up with the animation. 
	ReloadNow:
		REL1 ABCDEFGHI 2 A_WeaponReady();
		REL1 J 2
		{
			A_WeaponReady();
			A_StartSound("AoMShotgun/CockStart", CHAN_WEAPON +1);
		}
		REL1 KLMNOP 2 A_WeaponReady();
		Goto ReloadLoop;
		
	ReloadLoop: 
		TNT1 A 0 
		{
			if (invoker.AmmoCheck(Invoker.AmmoType1, 1))
			{
				Return A_Jump(256, 1);
			}
			
			Return ResolveState("ReloadEnd");
		}

		//Start Loop
		REL1 QRST 3 A_WeaponReady();
		TNT1 A 0
		{
			A_StartSound("AoMShotgun/Insert", CHAN_WEAPON);
			
			ReloadSingle(PRIMARY, 2, 2);				
			RMD_BARINFO.Set_Mag(invoker.Magazine);
			
			if (invoker.Magazine == invoker.MagazineMax)
			{
				Return A_Jump(256, "ReloadEnd");
			}
			
			Return A_Jump(256, "ReloadLoop");
		}
		REL1 TSRQ 3 A_WeaponReady();
		Goto ReloadEnd;
	
	ReloadEnd:
		REL1 UVWXYZ 2;
		REL2 A 2 A_StartSound("AoMShotgun/CockEnd", CHAN_WEAPON +1);
		REL2 BCD 2;
		Goto Ready;
		
	}
}


Class RMD_Mossberg590Proj : RMD_BaseBullet
{
	Default
	{
		//Normal Damage
		RMD_BaseBullet.ImpactDamage 8; 
		RMD_BaseBullet.DamageRand1 3.0;
		//Nerfed Damage
		RMD_BaseBullet.HealthDamage 1000;
		
		Scale 1.0;
		Decal "RMD_Buckshot_BulletHoles";
		-NOEXTREMEDEATH;
	}
}