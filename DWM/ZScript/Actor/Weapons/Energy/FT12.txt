class RMD_FT12FlameThrower : BaseWeapon
{

	Default
	{
		Weapon.SlotNumber 7;
		Weapon.SelectionOrder 1;
		Weapon.AmmoUse 0;
		Weapon.AmmoGive 0;
		Weapon.AmmoType "RMD_Fuel";
		Inventory.PickupMessage "$GOTCHAINGUN";
		Inventory.AltHudIcon "PIDF12";
		Obituary "$OB_MPCHAINGUN";
		Tag "Dragonfly Flamethrower";
		
		BaseWeapon.IronSight IRON_INACTIVE;
		
		BaseWeapon.MagazineMax 100;
		BaseWeapon.Magazine 100;
		
	}

	States
	{

	Ready:
		CHGG A 0;
		TNT1 A 0 
		{
			A_Jump(256, "Init");
		
		}
	
	Init:
		TNT1 A 0 
		{
				TakeCounterItem();
				RMD_BARINFO.Set_Mag(invoker.Magazine);
				RMD_BARINFO.SetAmmoIcon("AMMOFUEL");
				RMD_BARINFO.SetAmmo1("RMD_Fuel");
		}
		Goto ReadyReal;
		
	ReadyReal:
		CHGG A 0;
		IDLE A 0 A_StopSound(CHAN_WEAPON +1);
		IDLE A 1 A_WeaponReady(WRF_ALLOWRELOAD | WRF_NOBOB);
		Loop;	

	Deselect:
		SELC DCBA 1;
		SELC A 1 A_Lower(int.max);
		TNT1 A 0 A_Lower(int.max);
		Wait;
		
	Select:
		TNT1 A 0 
		{
				A_StartSound("Flamethrower/Select", CHAN_WEAPON +5);
				A_TakeInventory("Reloading", 99);
				RMD_BARINFO.Set_Mag(invoker.Magazine);
				RMD_BARINFO.SetAmmoIcon("AMMOFUEL");
				RMD_BARINFO.SetAmmo1("RMD_Fuel");
		}
		SELC ABCD 1;
		SELC D 1 A_Raise(int.max);
		IDLE A 1 A_Raise(int.max);
        Goto ReadyReal;
	

		
	Fire:
		TNT1 A 0
		{
		
			if (Invoker.MagLeft(Invoker.Magazine))
			{
				if (Invoker.IronSight == IRON_ACTIVE)
				{
					Return A_Jump(256, "IronFireNow");
				}
				else
				{	
					Return A_Jump(256, "FireNow");				
				}
			}
		
		
			//If it has no ammo left
			if (Invoker.IronSight == IRON_ACTIVE)
			{
				Return A_Jump(256, "IronReady");
			}
			
			else
			{
				Return A_Jump(256, "ReadyReal");				
			}		
			
		}
		Goto ReadyReal;
		
	FireNow:
		IDLE A 0
		{
			A_StartSound("FT12/Start", CHAN_WEAPON);
			A_StartSound("FT12/Loop", CHAN_WEAPON +1, CHANF_LOOP);	
			A_AlertMonsters();
		}
		Goto FireCheck;
		
	FireCheck:
		TNT1 A 0
		{
			if (Invoker.MagLeft(Invoker.Magazine))
			{
				Return A_Jump(256, "FireLoop");
			}
			
			Return A_Jump(256, "ReadyReal");
		}
		Goto ReadyReal;
	
	FireLoop:
		FIRE A 2
		{
			Invoker.Magazine -= 1;
			RMD_BARINFO.Set_Mag(invoker.Magazine);
			
			//A_GunFlash("Flash");
			A_FireProjectile("RMD_FT12_Flame",frandom(-0.2, 0.2), 1, 6, 4, CMF_AIMDIRECTION,frandom(-0.2, 0.2));
			A_AlertMonsters();
		}
		FIRE A 0 A_ReFire("FireCheck");
		FIRE BC 2;
		FIRE D 2;
		TNT1 A 0 A_StopSound(CHAN_WEAPON +1);
		TNT1 A 0 A_StartSound("FT12/Stop", CHAN_WEAPON);
		Goto ReadyReal;
		
	
	Reload:
		TNT1 A 0 ReloadCheck();
		Goto ReadyReal;

	ReloadNow:
		TNT1 A 0 A_TakeInventory("GotoReload", 1);
		REL1 AB 3;
		TNT1 A 0
		{
			A_StartSound("FT12/MagOut", CHAN_WEAPON);
		}
		REL1 CDEFGHIJ 3;
		TNT1 A 0
		{
			A_StartSound("FT12/MagIn", CHAN_WEAPON +2);
			
			ReloadGun(Invoker.AmmoType1, 0, 1, 1);
			Invoker.Magazine = Invoker.MagazineMax;
			RMD_BARINFO.Set_Mag(invoker.Magazine);
	
			Return A_Jump(0, "ReadyReal");	
		}
		REL1 K 3;
		Goto ReadyReal;

	}
}


Class RMD_FT12_Flame : Actor
{

Default
	{
		Height 6;
		Radius 3;
		Scale 0.125;
		Speed 37;
		Alpha 1.0;
		PROJECTILE;
		+BOUNCEONACTORS;
		+ROLLSPRITE;
		+FORCEXYBILLBOARD;
		+NOBLOOD;
		+NOBLOODDECALS;
		+BLOODLESSIMPACT;
		+DONTSPLASH;
		+THRUACTORS;
		-BLOODSPLATTER;
		-RIPPER;
		Damage 0;
		DamageType "Fire";
		DeathType "Fire";
		RenderStyle "AddShaded";
		
		BounceType "Hexen";
		BounceCount 1000000;
		BounceFactor 0.42;
		WallBounceFactor 0.42;
		
		ProjectileKickBack 0;
	}
	
	Override Void BeginPlay()
	{
		Super.BeginPlay();
		
		Roll = Random(0, 360);
		SetShade("ffa119");
	}
	
	Action void FireAttack()
	{
	
		A_SetScale(Scale.X * 1.5, Scale.Y * 1.5);
		A_Explode(18 * FRandom(0, 1.25), 64, XF_NOSPLASH);
		Roll += 1;
	}
	
	Action void SFX() 
	{
		let CVARS = RMD_CVARHandler(StaticEventHandler.Find('RMD_CVARHandler'));
		int CVAR_LowQuality = CVARS.RMDV_ParticleLowQuality;;
		
		if (CVAR_LowQuality == 1)
		{
			Return;
		}
				
	
		for (int i = 0; i < 1; ++i)
		{
			Vector3 PVel = (FRandom[FX](-2, 2), FRandom[FX](-2, 2), FRandom[FX](-1, 14)).unit()*FRandom[FX](2.0, 8.0);
			Vector3 RPos = (frandom(0.1, 0.1), frandom(0.1, 0.1), frandom(0.1, 0.1));
			let Particle = Spawn("SFX_FT12_Smoke", Pos + RPos);
					
			Particle.Vel = PVel;
			Particle.Scale = (0.12, 0.12);
		}
		
		for (int i = 0; i < 3; ++i)
		{
			Vector3 PVel = (FRandom[FX](-1.5, 1.5), FRandom[FX](-1.5, 1.5), FRandom[FX](-0.5, 2.5)).unit()*FRandom[FX](1.25, 5.0);
			Vector3 RPos = (frandom(0.1, 0.1), frandom(0.1, 0.1), frandom(0.1, 0.1));
			let Particle = Spawn("SFX_FT12_Fire", Pos + RPos);
					
			Particle.Vel = PVel;
			Particle.Scale = (Scale.X, Scale.Y);
		}
	
	}
	

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0
			{
				Roll = frandom(0, 360);		
			}		
		
		Goto Loopy;
		Loopy:
			TNT1 A 0 FireAttack();
			FIR9 ABCD 1 SFX(); 
			TNT1 A 0 FireAttack();
			FIR9 EFGH 1 SFX();
			TNT1 A 0 FireAttack();
			FIR9 IJKL 1 SFX();
			TNT1 A 0 FireAttack();
			FIR9 MNOP 1 
			{
				SFX();
				A_FadeOut(0.25);
			}
			TNT1 A 0 FireAttack();
			Stop;
		Death:
			TNT1 A 0;
			Stop;
	}
}


Class SFX_FT12_Fire : RMD_BaseParticle
{
	Default
	{
		RenderStyle "AddShaded";
		Alpha 1.0;
		+Bright;
		+ROLLSPRITE;
	}
	
	Override Void BeginPlay()
	{
		Super.BeginPlay();
		
		Roll = Random(0, 360);
		SetShade("ff463c");
	}	
	
	States
	{
		Spawn:
			TNT1 A 0;
			FIR9 JKLMN 1;
			FIR9 OP 1 A_FadeOut(0.5);
			Stop;

	}
}

Class SFX_FT12_Smoke : RMD_Smoke
{
	Default
	{
		RenderStyle "Translucent";
		Alpha 0.75;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(256, "Smoke1", "Smoke2", "Smoke3", "Smoke4");
		Smoke1:
			SMXA A 6;
			SMXA AAAAA 1 A_FadeOut(0.15);
			Stop;
		Smoke2:
			SMXB A 6;
			SMXB AAAAA 1 A_FadeOut(0.15);
			Stop;
		Smoke3:
			SMXC A 6;
			SMXC AAAAA 1 A_FadeOut(0.15);
			Stop;
		Smoke4:
			SMXD A 6;
			SMXD AAAAA 1 A_FadeOut(0.15);
			Stop;
	}
}