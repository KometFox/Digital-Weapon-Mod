Class RMD_LargeExplosionSpawner : Actor
{

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 
			{

				//Explosion
				for (int i = 0; i < 22; ++i)
				{
					Vector3 PVel = (FRandom[FX](-1.0, 1.0), FRandom[FX](-1.0, 1.0), FRandom[FX](-1.0, 1.0)).unit()*FRandom[FX](2.5, 6.5);
					Vector3 RPos = (frandom(0, 0), frandom(0, 0), frandom(0, 0));
					let Particle = Spawn("RMD_Boom", Pos + RPos);
					
					Particle.Vel = PVel;
					Particle.Roll = Random(0, 360);
					Particle.Scale = (0.7, 0.7);
					Particle.A_SetRenderStyle(0.995, STYLE_Add);
					Particle.A_SetTranslation("ExplosionOrange");
				}
				
				
				let CVARS = RMD_CVARHandler(StaticEventHandler.Find('RMD_CVARHandler'));
				int CVAR_LowQuality = CVARS.RMDV_ParticleLowQuality;;
		
				if (CVAR_LowQuality == 1)
				{
					Return;
				}
				
				//Shockwave
				for (int i = 0; i < 1; ++i)
				{
					Vector3 PVel = (FRandom[FX](-0.25, 0.25), FRandom[FX](-0.25, 0.25), FRandom[FX](-0.25, 0.25)).unit()*FRandom[FX](0.0, 0.0);
					Vector3 RPos = (frandom(-2, 2), frandom(-2, 2), frandom(-2, 2));
					let Particle = Spawn("RMD_Shockwave", Pos + RPos);
					
					Particle.Vel = PVel;
					Particle.Scale = (0.5, 0.5);
					Particle.SetShade("c8e2ff");
				}
				//Smoke
				for (int i = 0; i < 13; ++i)
				{
					Vector3 PVel = (FRandom[FX](-1.0, 1.0), FRandom[FX](-1.0, 1.0), FRandom[FX](-1.0, 1.0)).unit()*FRandom[FX](3.0, 9.0);
					Vector3 RPos = (frandom(-8, 8), frandom(-8, 8), frandom(-4, 4));
					let Particle = Spawn("RMD_DarkSmoke", Pos + RPos);
					
					Particle.Vel = PVel;
					Particle.Scale = (0.195, 0.195);
				}
					
				//Spark
				for (int i = 0; i < 12; ++i)
				{
					Vector3 PVel = (FRandom[FX](-0.25, 0.25), FRandom[FX](-0.25, 0.25), FRandom[FX](-0.25, 0.25)).unit()*FRandom[FX](8.0, 17.0);
					Vector3 RPos = (frandom(0, 0), frandom(0, 0), frandom(0, 8));
					let Particle = Spawn("RMD_LargeExplosion_Firework", Pos + RPos);
					
					Particle.Vel = PVel;
					Particle.Scale = (0.4, 0.4);
					Particle.A_SetRenderStyle(0.995, STYLE_Add);
					Particle.A_SetTranslation("ExplosionOrange");
				}
				
				//Trail
				for (int i = 0; i < 7; ++i)
				{
					Vector3 PVel = (FRandom[FX](-1.0, 1.0), FRandom[FX](-1.0, 1.0), FRandom[FX](-1.0, 1.0)).unit()*FRandom[FX](15.0, 30.0);
					let Particle = Spawn("RMD_LargeBoom_Trail", Pos);
					
					Particle.Vel = PVel;
				}

				//Flare
				for (int i = 0; i < 1; ++i)
				{
					Vector3 PVel = (FRandom[FX](-0.25, 0.25), FRandom[FX](-0.25, 0.25), FRandom[FX](-0.25, 0.25)).unit()*FRandom[FX](0.01, 0.01);
					Vector3 RPos = (frandom(-8, 8), frandom(-8, 8), frandom(-4, 4));
					let Particle = Spawn("RMD_LargeBoom_Flare", Pos + RPos);
					
					Particle.Vel = PVel;
					Particle.Scale = (1.9, 1.9);
					Particle.SetShade("c8e2ff");
				}


			}
			Stop;
			
	}
}


Class RMD_LargeExplosion_Firework : Actor
{
	Default
	{
		Radius 4;
		Height 4;
		Speed 18;
		PROJECTILE;
		RenderStyle "AddShaded";
		+THRUGHOST;
		+MISSILE;
		-NOGRAVITY;
		Gravity 1;
		Alpha 1.0;
		Scale 3.0;
	}
	States
	{
	Spawn:
		TNT1 A 0;
		TNT1 A 0 SetShade("Red");
	Spawn2:
		LEGZ A 1;
		Loop;
	Death:
		TNT1 A 0 A_SpawnItemEx("RMD_LargeExplosion_Ember", random (-15, 15), random(-15, 15));
		Stop;
	}
}

Class RMD_LargeExplosion_Ember : RMD_ModelSparks
{
	Default
	{
		RenderStyle "Add";
		+Bright;
		
		BounceFactor 0.001;
		WallBounceFactor 0.001;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_SetScale(1.2, 1.2);
			TNT1 A 0 A_ChangeVelocity(0, 0, 0, CVF_REPLACE);
			CFCF ABCDEFGHIJKLM 2;
			CFCF ABCDEFGHIJKLM 2;
			CFCF ABCDEFGHIJKLM 2;
			Goto Death;
		Death:
			CFCF NOP 2;
			Stop;
			
	}
}


Class RMD_LargeBoom_Flare : RMD_BaseParticle
{
	Default
	{
		RenderStyle "AddShaded";
		+Bright;
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			LENS CC 10;
			LENS CCCCC 1 A_FadeOut(0.2);
			Stop;	
	}
}



//------------------------------------------------------------------------------
//Explosion Trail
//------------------------------------------------------------------------------
Class RMD_LargeBoom_Trail : RMD_ModelSparks
{
	
	Default
	{
		BounceFactor 0.85;
		WallBounceFactor 0.85;
		Gravity 0;
	}
	
	override void Tick()
	{
		Super.Tick();
	
		if (!isFrozen())
		{
			if (true)
			{
				Vector3 PVel = (FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1)).unit()*FRandom[FX](0.05, 0.05);
				Vector3 RPos = (frandom(0, 0), frandom(0, 0), frandom(0, 0));
				let Particle = Spawn("RMD_LargeBoom_Fire", Pos + RPos);
					
				Particle.Vel = PVel;
				Particle.Scale = (0.16, 0.16);
				Particle.A_SetRenderStyle(0.995, STYLE_Add);
				Particle.A_SetTranslation("ExplosionOrange");
			}
		
			if (true)
			{
				Vector3 PVel = (FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1)).unit()*FRandom[FX](0.05, 0.05);
				Vector3 RPos = (frandom(0, 0), frandom(0, 0), frandom(0, 0));
				let Particle = Spawn("RMD_LargeBoom_Smoke", Pos + RPos);
					
				Particle.Vel = PVel;
				Particle.Scale = (0.07, 0.07);	
				Particle.SetShade("2d2d2d");
			}
		}
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 16;
			Stop;
	}

}


Class RMD_LargeBoom_Fire : RMD_ModelSparks
{
	Default
	{
		RenderStyle "Add";
		+Bright;
		-NoGravity
		Gravity 0;
	}
	
	Override void BeginPlay()
	{
		Super.BeginPlay();
		
		Roll = Random[FX](0, 360);	
		Angle = Random[FX](0, 360);	
	}
	
	
	States
	{
		Spawn:
			TNT1 A 0;
			BOM1 BDFHJLNPRTVX 1
			{
				A_SetScale(Scale.X * 1.03, Scale.Y * 1.03);
			}
			Stop;	
	}
}



Class RMD_LargeBoom_Smoke : RMD_ModelSparks
{
	Default
	{
		RenderStyle "Translucent";
		Alpha 0.8;
		Gravity 0;
		-NoGravity
	}
	
	Override void BeginPlay()
	{
		Super.BeginPlay();
		
		Roll = frandom(0, 360);	
	}
	
	Override void Tick()
	{
		Super.Tick();
		
		if (!isFrozen())
		{
			A_SetScale(Scale.X * 1.065, Scale.Y * 1.065);	
		}
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(256, "Smoke1", "Smoke2", "Smoke3", "Smoke4");
		Smoke1:
			SMXA A 7;
			SMXA AAAAAAAAAA 1 A_FadeOut(0.075);
			Stop;
		Smoke2:
			SMXB A 7;
			SMXB AAAAAAAAAA 1 A_FadeOut(0.075);
			Stop;
		Smoke3:
			SMXC A 7;
			SMXC AAAAAAAAAA 1 A_FadeOut(0.075);
			Stop;
		Smoke4:
			SMXD A 7;
			SMXD AAAAAAAAAA 1 A_FadeOut(0.075);
			Stop;
	}
}
