//------------------------------------------------------------------------------
//Rocket Trail
//------------------------------------------------------------------------------
Class RMD_SMRL_RocketTrail : RMD_BaseParticle
{
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 0 
			{
			
				let CVARS = RMD_CVARHandler(StaticEventHandler.Find('RMD_CVARHandler'));
				int CVAR_LowQuality = CVARS.RMDV_ParticleLowQuality;;
		
				if (CVAR_LowQuality == 1)
				{
					Return;
				}

				if (true)
				{
					Vector3 PVel = (FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1)).unit()*FRandom[FX](0.05, 0.05);
					Vector3 RPos = (frandom(0, 0), frandom(0, 0), frandom(0, 0));
					let Particle = Spawn("RMD_SMRL_Smoke", Pos + RPos);
					
					Particle.Vel = PVel;
					Particle.Scale = (0.14, 0.14);			
				}
				
				if (true)
				{
					Vector3 PVel = (FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1)).unit()*FRandom[FX](0.05, 0.05);
					Vector3 RPos = (frandom(0, 0), frandom(0, 0), frandom(0, 0));
					let Particle = Spawn("RMD_SMRL_Fire", Pos + RPos);
					
					Particle.Vel = PVel;
					Particle.Scale = (0.12, 0.12);
					Particle.A_SetRenderStyle(1.0, STYLE_AddShaded);
					Particle.SetShade("fd6518");
				}				
				
			}
			Stop;
	}
}

Class RMD_SMRL_RocketTrailFire : RMD_BaseParticle
{
	
	States
	{
		Spawn:
			TNT1 A 0 NoDelay;
			TNT1 A 0 
			{
			
				let CVARS = RMD_CVARHandler(StaticEventHandler.Find('RMD_CVARHandler'));
				int CVAR_LowQuality = CVARS.RMDV_ParticleLowQuality;;
		
				if (CVAR_LowQuality == 1)
				{
					Return;
				}				
			}
			Stop;
	}
}

Class RMD_SMRL_Fire : RMD_BaseParticle
{
	Default
	{
		RenderStyle "Add";
		+Bright;
		Alpha 0.65;
	}
	
	Override void BeginPlay()
	{
		Super.BeginPlay();
		
		Roll = Random[FX](0, 360);	
		Angle = Random[FX](0, 360);	
	}	
	
	Override void Tick()
	{
		Super.Tick();
		
		if (!isFrozen())
		{
			Roll += 0.5;	
		}
	}	
	
	States
	{
		Spawn:
			TNT1 A 0;
			BOM1 ACEGIKMO 1
			{
				A_SetScale(Scale.X * 0.96, Scale.Y * 0.96);
				A_FadeOut(0.65 / 8);
			}
			Stop;	
	}
}

Class RMD_SMRL_Flare : RMD_BaseParticle
{

	Default
	{
		RenderStyle "AddShaded";
		Alpha 0.99;
		+Bright;
	}
	
	Override Void Tick()
	{
		Super.Tick();
		
		//Code taken from Lambda mod, thanks.
		if (!isFrozen())
		{
				
			if (Scale.X < 1.5 || Scale.Y < 1.5)
			{
				A_SetScale(Scale.X * 1.01, Scale.Y * 1.01);
			}
				
			if	(Target || (Target && Target.Health>0))
			{
				A_Warp(AAPTR_TARGET, flags:WARPF_INTERPOLATE);
			}
			
			else
			{
				Destroy();
			}
		}
	}
	
	States
	{
		Spawn:
			LENS BB 1 NoDelay;
			Loop;
	}
}


Class RMD_SMRL_Smoke : RMD_BaseParticle
{
	Const CFADEOUT = 0.015;


	Default
	{
		RenderStyle "Translucent";
		Alpha 0.15;
	}
	
	Override void BeginPlay()
	{
		Super.BeginPlay();
		
		Roll = Random[FX](0, 360);	
		Angle = Random[FX](0, 360);
	}
	
	Override void Tick()
	{
		Super.Tick();
		
		if (!isFrozen())
		{
			A_SetScale(Scale.X * 1.03, Scale.Y * 1.03);	
			Vel.Z = 2.8;
		}
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(256, "Smoke1", "Smoke2", "Smoke3", "Smoke4");
		Smoke1:
			SMOA A 7;
			SMOA AAAAAAAAAA 1 A_FadeOut(CFADEOUT);
			Stop;
		Smoke2:
			SMOB A 7;
			SMOB AAAAAAAAAA 1 A_FadeOut(CFADEOUT);
			Stop;
		Smoke3:
			SMOC A 7;
			SMOC AAAAAAAAAA 1 A_FadeOut(CFADEOUT);
			Stop;
		Smoke4:
			SMOD A 7;
			SMOD AAAAAAAAAA 1 A_FadeOut(CFADEOUT);
			Stop;
	}
}
//------------------------------------------------------------------------------
//Grenade Trail
//------------------------------------------------------------------------------


Class RMD_GrenadeTrail : RMD_BaseParticle
{

	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 
			{

				if (true)
				{
					Vector3 PVel = (FRandom[FX](-0.1, 0.1), FRandom[FX](-0.1, 0.1), FRandom[FX](0.0, 0.1)).unit()*FRandom[FX](0.05, 0.05);
					Vector3 RPos = (frandom(0, 0), frandom(0, 0), frandom(0, 0));
					let Particle = Spawn("RMDP_GrenadeSmoke", Pos + RPos);
					
					Particle.Vel = PVel;
					Particle.Scale = (0.08, 0.08);			
				}	
				
			}
			Stop;
	}


}

Class RMDP_GrenadeSmoke : RMD_BaseParticle
{
	Default
	{
		RenderStyle "Translucent";
		Alpha 0.5;
	}
	
	Override void BeginPlay()
	{
		Super.BeginPlay();
		
		Roll = Random[FX](0, 360);	
		Angle = Random[FX](0, 360);	
	}
	
	Override void Tick()
	{
		Super.Tick();
		
		if (!isFrozen())
		{
			A_SetScale(Scale.X * 1.06, Scale.Y * 1.06);
			Vel.Z = 2.75;
		}
	}
	
	States
	{
		Spawn:
			TNT1 A 0;
			TNT1 A 0 A_Jump(256, "Smoke1", "Smoke2", "Smoke3", "Smoke4");
		Smoke1:
			SMOA A 10;
			SMOA AAAAAAAAAA 1 A_FadeOut(0.05);
			Stop;
		Smoke2:
			SMOB A 10;
			SMOB AAAAAAAAAA 1 A_FadeOut(0.05);
			Stop;
		Smoke3:
			SMOC A 10;
			SMOC AAAAAAAAAA 1 A_FadeOut(0.05);
			Stop;
		Smoke4:
			SMOD A 10;
			SMOD AAAAAAAAAA 1 A_FadeOut(0.05);
			Stop;
	}
}